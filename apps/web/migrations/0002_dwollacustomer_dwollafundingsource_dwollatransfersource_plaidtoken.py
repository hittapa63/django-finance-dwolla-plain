# Generated by Django 3.2.8 on 2021-12-02 14:47

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('web', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='PlaidToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('link_token', models.CharField(blank=True, max_length=255, null=True)),
                ('public_token', models.CharField(blank=True, max_length=255, null=True)),
                ('account_id', models.CharField(blank=True, max_length=255, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='plaid_tokens', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DwollaTransferSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('funding_id', models.CharField(blank=True, max_length=255, null=True)),
                ('transfer_id', models.CharField(blank=True, help_text='transfer id from dwolla', max_length=100, null=True)),
                ('amount', models.FloatField()),
                ('currency', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.CharField(blank=True, help_text='deposit, withdraw', max_length=255, null=True)),
                ('clearing', models.CharField(blank=True, help_text='A clearing JSON object that contains source and destination keys to slow down or expedite a transfer.', max_length=255, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dwolla_transfer_sources', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DwollaFundingSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('funding_id', models.CharField(blank=True, help_text='funding source id', max_length=100, null=True)),
                ('status', models.CharField(blank=True, help_text='status of funding source', max_length=100, null=True)),
                ('type', models.CharField(blank=True, help_text='type of funding source', max_length=100, null=True)),
                ('bank_account_type', models.CharField(blank=True, help_text='Type of bank account: checking, savings, general-ledger or loan.', max_length=100, null=True)),
                ('name', models.CharField(blank=True, help_text='Arbitrary nickname for the funding source. Must be 50 characters or less.', max_length=100, null=True)),
                ('bank_name', models.CharField(blank=True, help_text='funding source id', max_length=100, null=True)),
                ('fingerprint', models.CharField(blank=True, help_text='funding source fingerprint', max_length=225, null=True)),
                ('channels', models.CharField(blank=True, help_text='An array containing a list of processing channels. ACH is the default processing channel for bank transfers. Acceptable value for channels is: wire. e.g. “channels”: [ “wire” ]. A funding source (Bank Account) added using the wire channel only supports a funds transfer going to the bank account from a balance. As a result, wire as a destination funding source can only be added where the Customer account type is a Verified Customer. Note: channels is a premium feature that must be enabled on your account and is only available to select Dwolla customers.', max_length=300, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dwolla_funding_sources', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DwollaCustomer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_active', models.BooleanField(default=True)),
                ('customer_id', models.CharField(help_text='customer id from dwolla', max_length=100)),
                ('status', models.CharField(blank=True, help_text='status of customer from dwolla', max_length=100, null=True)),
                ('first_name', models.CharField(help_text="An individual Customer's first name. Must be less than or equal to 50 characters and contain no special characters.", max_length=100)),
                ('last_name', models.CharField(help_text="An individual Customer's last name. Must be less than or equal to 50 characters and contain no special characters.", max_length=100)),
                ('email', models.CharField(help_text="Customer's email address.", max_length=100)),
                ('ip_address', models.CharField(blank=True, help_text="Customer's IP address.", max_length=100, null=True)),
                ('type', models.CharField(default='personal', help_text='The Verified Customer type. Set to personal if creating a verified personal Customer.', max_length=100)),
                ('address1', models.CharField(help_text="First line of the street address of the Customer's permanent residence. Must be less than or equal to 50 characters and contain no special characters. Note: PO Boxes are not allowed.", max_length=100)),
                ('address2', models.CharField(blank=True, help_text="Second line of the street address of the Customer's permanent residence. Must be less than or equal to 50 characters and contain no special characters. Note: PO Boxes are not allowed.", max_length=100, null=True)),
                ('city', models.CharField(help_text="City of Customer's permanent residence.", max_length=100)),
                ('state', models.CharField(help_text='Two letter abbreviation of the state in which the Customer resides, e.g. CA.', max_length=100)),
                ('postal_code', models.CharField(help_text="Postal code of Customer's permanent residence. US five-digit ZIP or ZIP + 4 code. e.g. 50314.", max_length=100)),
                ('date_of_birth', models.CharField(help_text="Customer's date of birth in YYYY-MM-DD format. Must be between 18 to 125 years of age.", max_length=100)),
                ('ssn', models.CharField(help_text="Last four or full 9 digits of the Customer's Social Security Number.", max_length=100)),
                ('phone', models.CharField(blank=True, help_text="Customer's 10 digit phone number. No hyphens or other separators, e.g. 3334447777.", max_length=100, null=True)),
                ('correlation_id', models.CharField(blank=True, help_text='A unique string value attached to a customer which can be used for traceability between Dwolla and your application. Must be less than or equal to 255 characters and contain no spaces. Acceptable characters are: a-Z, 0-9, -, ., and _. Note: Sensitive Personal Identifying Information (PII) should not be used in this field and it is recommended to use a random value for correlationId, like a UUID. Uniqueness is enforced on correlationId across Customers.', max_length=100, null=True)),
                ('business_name', models.CharField(blank=True, help_text='Registered business name.', max_length=100, null=True)),
                ('doing_business_as', models.CharField(blank=True, help_text='Preferred business name – also known as fictitious name, or assumed name.', max_length=100, null=True)),
                ('business_type', models.CharField(blank=True, help_text='\tBusiness structure. Possible values are corporation, llc, partnership.', max_length=100, null=True)),
                ('business_classification', models.CharField(blank=True, help_text='The industry classification Id that corresponds to Customer’s business. Reference the Business Classifications section to learn how to generate this Id.', max_length=100, null=True)),
                ('ein', models.CharField(blank=True, help_text='Employer Identification Number.', max_length=100, null=True)),
                ('website', models.CharField(blank=True, help_text='Business’ website. e.g. https://www.domain.com', max_length=100, null=True)),
                ('controller', models.CharField(blank=True, help_text='A controller JSON object.', max_length=1000, null=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='dwolla_customers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
